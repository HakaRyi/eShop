@page "/login"
@using Microsoft.EntityFrameworkCore
@using ServiceLayer.DTO
@using ServiceLayer
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Login</PageTitle>

<link href="css/AuthForm.css" rel="stylesheet" />
<br>
<br>
    <div class="cont">
        <EditForm method="post" Model="LoginModel" OnValidSubmit="LoginHandle" FormName="login" Enhance class="form sign-in">
            <h2>Welcome</h2>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div>
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="LoginModel.Email" class="form-control" />
                <ValidationMessage For="() => LoginModel.Email" class="text-danger" />
            </div>
            <div>
                <label for="password" class="form-label">Password:</label>
                <InputText id="password" @bind-Value="LoginModel.Password" class="form-control" type="password" />
                <ValidationMessage For="() => LoginModel.Password" class="text-danger" />
            </div>
                <p class="forgot-pass">Forgot password?</p>
            @if (!string.IsNullOrWhiteSpace(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }
            <button type="submit" class="submit">Login</button>
        </EditForm>

         <div class="sub-cont">
            <div class="img">
                <div class="img__text m--up">                 
                    <h3>Don't have an account? Please Sign up!</h3>
                </div>
                <NavLink class="img__btn" href="/register" style="display: block; text-align: center; text-decoration:none; line-height: 35px">
                    <div class="m--up">Sign Up</div>
                </NavLink>
            </div>
        </div> 
    </div>

@* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *@

<div>
    <a href="/">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginDTO LoginModel { get; set; } = new();

    [Inject]
    private MemberService MemberService { get; set; }

    string errorMessage;
    string registerError;

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task LoginHandle()
    {
        var result = await MemberService.Login(LoginModel.Email, LoginModel.Password);
        if(result != null)
        {
            if (!result.Status)
            {
                errorMessage = "You do not have permission to do this function!";
                return;
            }
            else
             {
             HttpContextAccessor.HttpContext.Response.Cookies.Append("UserEmail", LoginModel.Email, new CookieOptions
             {
                 Expires = DateTimeOffset.Now.AddHours(3),
                 HttpOnly = false,
                 Secure = true,
                 SameSite = SameSiteMode.Strict
             });
             NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            errorMessage = "Invalid Email or Password!";
            return;
        }
    }
}